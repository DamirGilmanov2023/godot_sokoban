[preset.0]

name="HTML5"
platform="HTML5"
runnable=true
custom_features=""
export_filter="all_resources"
include_filter=""
exclude_filter=""
export_path="../html5_for_yandex/index.html"
script_export_mode=1
script_encryption_key=""

[preset.0.options]

custom_template/debug=""
custom_template/release=""
variant/export_type=0
vram_texture_compression/for_desktop=true
vram_texture_compression/for_mobile=true
html/export_icon=true
html/custom_html_shell=""
html/head_include="<!-- Yandex Games SDK -->
<script src=\"https://yandex.ru/games/sdk/v2\"></script>
<script>
YaGames.init().then(ysdk => { window.ysdk = ysdk; });
</script>

<script>
function ShowAd(callback) {
window.ysdk.adv.showFullscreenAdv({
callbacks: {
onClose: function(wasShown) {
callback(true);
console.log('Ad!');
},
onError: function(error) {
callback(false);
console.log('Ad Error:', error);
}
}
})
}


function ShowAdRewardedVideo(callback) {
window.ysdk.adv.showRewardedVideo({
callbacks: {
onOpen: () => { console.log('Video ad open.'); },
onRewarded: () => {
isRewarded = true;
callback(isRewarded);
console.log('Reward!');
},
onClose: () => { console.log('Video ad closed.'); },
onError: (e) => { console.log('Error while open rewarded ad:', e); }
}
});
}


var player;
function initPlayer() {
    return ysdk.getPlayer({ scopes: false }).then(_player => {
            player = _player;
            return player;
        });
}
function Auth(){
initPlayer().then(_player => {
        if (_player.getMode() === 'lite') {
            // Игрок не авторизован.
            ysdk.auth.openAuthDialog().then(() => {
                    // Игрок успешно авторизован
                    initPlayer().catch(err => {
                        // Ошибка при инициализации объекта Player.
                    });
                }).catch(() => {
                    // Игрок не авторизован.
                });
        }
    }).catch(err => {
        // Ошибка при инициализации объекта Player.
    });
	}
	
function get_score_lider(liderboard,callback){
ysdk.getLeaderboards()
  .then(lb => lb.getLeaderboardPlayerEntry(liderboard))
  .then(res => callback(res['score']))
  //.then(res => console.log(res))
  .catch(err => {
    if (err.code === 'LEADERBOARD_PLAYER_NOT_PRESENT') {
      callback(0)
    }
  });
}

function set_score_lider(liderboard,value){
ysdk.getLeaderboards()
  .then(lb => {
    // Без extraData
    lb.setLeaderboardScore(liderboard, value);
  });
}

function is_auth(callback){
initPlayer().then(_player => {
        if (_player.getMode() === 'lite') {
            // Игрок не авторизован.
            callback(false)
        }else{
            callback(true)
        }
    }).catch(err => {
        callback(false)
    });
}

function foc_unfoc(callback){
	window.onfocus = function(){
	callback(\"foc\");
	}
	window.onblur = function(){
	callback(\"unfoc\");
	}
	document.addEventListener('visibilitychange', () => {
	//console.log(document.visibilityState);
  if (document.visibilityState === 'visible') {
    callback(\"foc\");
	//console.log(\"foc\");
  } else {
    callback(\"unfoc\");
	//console.log(\"unfoc\");
  }
})
}


ysdk.feedback.canReview()
        .then(({ value, reason }) => {
            if (value) {
                ysdk.feedback.requestReview()
                    .then(({ feedbackSent }) => {
                        console.log(feedbackSent);
                    })
            } else {
                console.log(reason)
            }
        })
		
function get_data(callback){
var player;
ysdk.getPlayer().then(_player=>_player.getData()).then(res=>{callback(res['PlayerData']); console.log(res['PlayerData'])});
}

function set_data(value){
var player;
var v=String(value);
ysdk.getPlayer().then(_player => {
        player = _player;
        player.setData(
        {'PlayerData':v}
    ).then(() => {
        console.log('data is set')})
  		console.log(v);
    });
}

</script>"
html/canvas_resize_policy=2
html/focus_canvas_on_start=true
html/experimental_virtual_keyboard=false
progressive_web_app/enabled=false
progressive_web_app/offline_page=""
progressive_web_app/display=1
progressive_web_app/orientation=0
progressive_web_app/icon_144x144=""
progressive_web_app/icon_180x180=""
progressive_web_app/icon_512x512=""
progressive_web_app/background_color=Color( 0, 0, 0, 1 )
